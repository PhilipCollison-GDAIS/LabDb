-- MySQL Script generated by MySQL Workbench
-- 07/30/14 13:54:24
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema lab_database_schema
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `lab_database_schema` ;
CREATE SCHEMA IF NOT EXISTS `lab_database_schema` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `lab_database_schema` ;

-- -----------------------------------------------------
-- Table `lab_database_schema`.`rooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`rooms` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`rooms` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `room_number` INT UNSIGNED NOT NULL,
  `comment` VARCHAR(255) NULL,
  `building_name` VARCHAR(45) NULL COMMENT 'Eventually will be building_id and a foreign key.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`widths`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`widths` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`widths` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `width` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `width_UNIQUE` (`width` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`depths`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`depths` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`depths` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `depth` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `depth_UNIQUE` (`depth` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`racks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`racks` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`racks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `name` VARCHAR(15) NOT NULL,
  `old_name` VARCHAR(15) NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `floor_location` VARCHAR(10) NOT NULL,
  `height_ru` INT UNSIGNED NOT NULL,
  `width_id` INT UNSIGNED NOT NULL,
  `depth_id` INT UNSIGNED NOT NULL,
  `max_power` INT UNSIGNED NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `room_id_idx` (`room_id` ASC),
  INDEX `width_id_idx` (`width_id` ASC),
  INDEX `depth_id_idx` (`depth_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `racks-room_key`
    FOREIGN KEY (`room_id`)
    REFERENCES `lab_database_schema`.`rooms` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `racks-width_key`
    FOREIGN KEY (`width_id`)
    REFERENCES `lab_database_schema`.`widths` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `racks-depth_key`
    FOREIGN KEY (`depth_id`)
    REFERENCES `lab_database_schema`.`depths` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `lab_database_schema`.`affiliations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`affiliations` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`affiliations` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `affiliated` CHAR NOT NULL,
  `parent_equipment_id` INT UNSIGNED NULL,
  `parent_rack_id` INT UNSIGNED NULL,
  `elevation` INT UNSIGNED NULL COMMENT 'in RU. Only valid if \'located\' field is set to \'rack\'',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `affiliation-parent_rack_key_idx` (`parent_rack_id` ASC),
  INDEX `affiliations-parent_equipment_key_idx` (`parent_equipment_id` ASC),
  CONSTRAINT `affiliations-parent_rack_key`
    FOREIGN KEY (`parent_rack_id`)
    REFERENCES `lab_database_schema`.`racks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `affiliations-parent_equipment_key`
    FOREIGN KEY (`parent_equipment_id`)
    REFERENCES `lab_database_schema`.`equipment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`equipment` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`equipment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `name` VARCHAR(45) NULL,
  `serial_num` INT UNSIGNED NOT NULL,
  `barcode_number` VARCHAR(10) NOT NULL,
  `vendor_id` INT UNSIGNED NOT NULL,
  `model` VARCHAR(10) NOT NULL,
  `GFE_id` VARCHAR(10) NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `equipment-affiliation_key`
    FOREIGN KEY (`id`)
    REFERENCES `lab_database_schema`.`affiliations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`connector_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`connector_types` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`connector_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `connector_type` VARCHAR(10) NOT NULL,
  `affiliated` CHAR NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`connector_type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`optical_cassettes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`optical_cassettes` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`optical_cassettes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `rack_id` INT UNSIGNED NOT NULL COMMENT 'foreign key to racks table',
  `elevation` INT UNSIGNED NOT NULL COMMENT 'in RU',
  `slot_count` INT UNSIGNED NOT NULL COMMENT 'slot number of the min cassette chassis',
  `name` VARCHAR(10) NOT NULL,
  `port_count` INT UNSIGNED NOT NULL,
  `connector_type_id` INT UNSIGNED NOT NULL,
  `MTP_type` INT UNSIGNED NOT NULL COMMENT 'number of strands in the MTP',
  PRIMARY KEY (`id`),
  INDEX `rack_id_idx` (`rack_id` ASC),
  INDEX `conector_id_idx` (`connector_type_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `optical_cassettes-rack_key`
    FOREIGN KEY (`rack_id`)
    REFERENCES `lab_database_schema`.`racks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `optical_cassettes-connector_type_key`
    FOREIGN KEY (`connector_type_id`)
    REFERENCES `lab_database_schema`.`connector_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`vendors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`vendors` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`vendors` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `vendor` VARCHAR(20) NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `vendor_UNIQUE` (`vendor` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`MTP_connects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`MTP_connects` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`MTP_connects` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `optical_connection_id_1` INT UNSIGNED NOT NULL,
  `optical_connection_id_2` INT UNSIGNED NOT NULL,
  `port_number_1` INT UNSIGNED NOT NULL,
  `port_number_2` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `optical_connection_id_1_idx` (`optical_connection_id_1` ASC),
  INDEX `optical_connection_id_2_idx` (`optical_connection_id_2` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `MTP_connects-optical_connection_key_ 1`
    FOREIGN KEY (`optical_connection_id_1`)
    REFERENCES `lab_database_schema`.`optical_cassettes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `MTP_connects-optical_connection_key_ 2`
    FOREIGN KEY (`optical_connection_id_2`)
    REFERENCES `lab_database_schema`.`optical_cassettes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`ports`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`ports` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`ports` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `affiliated` CHAR NOT NULL COMMENT 'Represents whether a connector is refrencing something on a piece of equipment or an optical cassette',
  `equipment_id` INT UNSIGNED NULL DEFAULT NULL,
  `optical_cassette_id` INT UNSIGNED NULL DEFAULT NULL,
  `name` VARCHAR(15) NULL COMMENT 'Name printed next to port',
  `connector_type_id` INT UNSIGNED NOT NULL,
  `connector_gender` CHAR NOT NULL COMMENT '\"M\" denotes a male connection, \"F\" denotes female',
  PRIMARY KEY (`id`),
  INDEX `equipment_id_idx` (`equipment_id` ASC),
  INDEX `connector_id_idx` (`connector_type_id` ASC),
  INDEX `optical_connection_id_idx` (`optical_cassette_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `ports-equipment_key`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `lab_database_schema`.`equipment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `ports-connector_type_key`
    FOREIGN KEY (`connector_type_id`)
    REFERENCES `lab_database_schema`.`connector_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ports-optical_casette_key`
    FOREIGN KEY (`optical_cassette_id`)
    REFERENCES `lab_database_schema`.`optical_cassettes` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`connections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`connections` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`connections` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `port_id_1` INT UNSIGNED NOT NULL,
  `port_id_2` INT UNSIGNED NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `port_id_1_idx` (`port_id_1` ASC),
  INDEX `port_id_2_idx` (`port_id_2` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `connections-port_key_1`
    FOREIGN KEY (`port_id_1`)
    REFERENCES `lab_database_schema`.`ports` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `connections-port_key_2`
    FOREIGN KEY (`port_id_2`)
    REFERENCES `lab_database_schema`.`ports` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '			';


-- -----------------------------------------------------
-- Table `lab_database_schema`.`projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`projects` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`projects` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`project_equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`project_equipment` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`project_equipment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `equipment_id` INT UNSIGNED NOT NULL,
  `project_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `project_equipment_equipment_id_idx` (`equipment_id` ASC),
  INDEX `project_equipment_project_id_idx` (`project_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `project_equipment-equipment_key`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `lab_database_schema`.`equipment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `project_equipment-project_key`
    FOREIGN KEY (`project_id`)
    REFERENCES `lab_database_schema`.`projects` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab_database_schema`.`project_connections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lab_database_schema`.`project_connections` ;

CREATE TABLE IF NOT EXISTS `lab_database_schema`.`project_connections` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `connection_id` INT UNSIGNED NOT NULL,
  `project_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `project_connections-connection_key_idx` (`connection_id` ASC),
  INDEX `project_connections-project_key_idx` (`project_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `project_connections-connection_key`
    FOREIGN KEY (`connection_id`)
    REFERENCES `lab_database_schema`.`connections` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `project_connections-project_key`
    FOREIGN KEY (`project_id`)
    REFERENCES `lab_database_schema`.`projects` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `lab_database_schema` ;

-- -----------------------------------------------------
-- procedure elevation_and_rack_id_for_port
-- -----------------------------------------------------

USE `lab_database_schema`;
DROP procedure IF EXISTS `lab_database_schema`.`elevation_and_rack_id_for_port`;

DELIMITER $$
USE `lab_database_schema`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `elevation_and_rack_id_for_port`(IN `port_id` INT UNSIGNED) NO SQL
BEGIN
	DECLARE affiliated CHAR;
	DECLARE affiliation_id INT;
	DECLARE affiliation_char CHAR;

	SET affiliated = (SELECT ports.affiliated FROM ports WHERE ports.id = port_id);

	IF affiliated = 'O' THEN
		SELECT optical_cassettes.elevation AS elevation, optical_cassettes.rack_id AS rack_id
		FROM optical_cassettes, ports
		WHERE optical_cassettes.id = ports.optical_cassette_id AND ports.id = port_id;
	ELSEIF affiliated = 'E' THEN
		SET affiliation_id = (SELECT ports.equipment_id FROM ports WHERE ports.id = port_id);

		label: LOOP
			SET affiliation_char = (SELECT affiliations.affiliated FROM affiliations WHERE affiliations.id = affiliation_id);

			IF affiliation_char = 'R' THEN
				SELECT affiliations.elevation AS elevation, affiliations.parent_rack_id AS rack_id
				FROM affiliations WHERE affiliations.id = affiliation_id;
				LEAVE label;
			ELSEIF affiliation_char = 'E' THEN
				-- update condition
				SET affiliation_id = (SELECT affiliations.parent_equipment_id FROM affiliations WHERE affiliations.id = affiliation_id);
			ELSE
				-- throw error
				SELECT "ERROR: EQUIPMENT IS INVALID, PORT IS LOCATED ON A PIECE OF EQUIPMENT THAT HAS AN INVALID AFFILIATION";
				LEAVE label;
			END IF;
		END LOOP label;
	ELSE
		-- throw error
		SELECT "ERROR: PORT IS INVALID, PORT IS NOT LOCATED ON AN OPTICAL CASSETTE OR A PIECE OF EQUIPMENT";
	END IF;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
